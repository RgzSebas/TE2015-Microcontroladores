

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Jul 23 00:42:48 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.35
    17                           ; Generated 05/05/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K50 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _TRISD	set	3989
    52  0000                     _TRISC	set	3988
    53  0000                     _TRISB	set	3987
    54  0000                     _LATC	set	3979
    55  0000                     _LATD	set	3980
    56  0000                     _LATE	set	3981
    57  0000                     _ANSELA	set	3931
    58  0000                     _ANSELB	set	3932
    59  0000                     _ANSELC	set	3933
    60  0000                     _ANSELD	set	3934
    61  0000                     _LATA	set	3977
    62  0000                     _LATB	set	3978
    63  0000                     _OSCTUNE	set	3995
    64  0000                     _OSCCON2	set	4050
    65  0000                     _OSCCON	set	4051
    66  0000                     _INTCON2bits	set	4081
    67  0000                     _ACTCON	set	4021
    68  0000                     _TRISA	set	3986
    69  0000                     _TRISE	set	3990
    70  0000                     _WPUB	set	3973
    71  0000                     _ANSELE	set	3935
    72  0000                     _INTCONbits	set	4082
    73                           
    74                           ; #config settings
    75                           
    76                           	psect	cinit
    77  007F90                     __pcinit:
    78                           	callstack 0
    79  007F90                     start_initialization:
    80                           	callstack 0
    81  007F90                     __initialization:
    82                           	callstack 0
    83  007F90                     end_of_initialization:
    84                           	callstack 0
    85  007F90                     __end_of__initialization:
    86                           	callstack 0
    87  007F90  0100               	movlb	0
    88  007F92  EFD0  F03F         	goto	_main	;jump to C main() function
    89                           
    90                           	psect	cstackCOMRAM
    91  000000                     __pcstackCOMRAM:
    92                           	callstack 0
    93  000000                     
    94                           ; 1 bytes @ 0x0
    95 ;;
    96 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    97 ;;
    98 ;; *************** function _main *****************
    99 ;; Defined at:
   100 ;;		line 49 in file "main.c"
   101 ;; Parameters:    Size  Location     Type
   102 ;;		None
   103 ;; Auto vars:     Size  Location     Type
   104 ;;		None
   105 ;; Return value:  Size  Location     Type
   106 ;;                  1    wreg      void 
   107 ;; Registers used:
   108 ;;		wreg, status,2, cstack
   109 ;; Tracked objects:
   110 ;;		On entry : 0/0
   111 ;;		On exit  : 0/0
   112 ;;		Unchanged: 0/0
   113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   114 ;;      Params:         0       0       0       0       0       0       0       0       0
   115 ;;      Locals:         0       0       0       0       0       0       0       0       0
   116 ;;      Temps:          0       0       0       0       0       0       0       0       0
   117 ;;      Totals:         0       0       0       0       0       0       0       0       0
   118 ;;Total ram usage:        0 bytes
   119 ;; Hardware stack levels required when called: 2
   120 ;; This function calls:
   121 ;;		_SYSTEM_Initialize
   122 ;; This function is called by:
   123 ;;		Startup code after reset
   124 ;; This function uses a non-reentrant model
   125 ;;
   126                           
   127                           	psect	text0
   128  007FA0                     __ptext0:
   129                           	callstack 0
   130  007FA0                     _main:
   131                           	callstack 29
   132  007FA0                     
   133                           ;main.c: 52:     SYSTEM_Initialize();
   134  007FA0  ECCB  F03F         	call	_SYSTEM_Initialize	;wreg free
   135  007FA4                     l764:
   136                           
   137                           ;main.c: 71:     {;main.c: 73:         LATB = 0xFF;
   138  007FA4  688A               	setf	138,c	;volatile
   139  007FA6  EFD2  F03F         	goto	l764
   140  007FAA  EF00  F000         	goto	start
   141  007FAE                     __end_of_main:
   142                           	callstack 0
   143                           
   144 ;; *************** function _SYSTEM_Initialize *****************
   145 ;; Defined at:
   146 ;;		line 50 in file "mcc_generated_files/mcc.c"
   147 ;; Parameters:    Size  Location     Type
   148 ;;		None
   149 ;; Auto vars:     Size  Location     Type
   150 ;;		None
   151 ;; Return value:  Size  Location     Type
   152 ;;                  1    wreg      void 
   153 ;; Registers used:
   154 ;;		wreg, status,2, cstack
   155 ;; Tracked objects:
   156 ;;		On entry : 0/0
   157 ;;		On exit  : 0/0
   158 ;;		Unchanged: 0/0
   159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   160 ;;      Params:         0       0       0       0       0       0       0       0       0
   161 ;;      Locals:         0       0       0       0       0       0       0       0       0
   162 ;;      Temps:          0       0       0       0       0       0       0       0       0
   163 ;;      Totals:         0       0       0       0       0       0       0       0       0
   164 ;;Total ram usage:        0 bytes
   165 ;; Hardware stack levels used: 1
   166 ;; Hardware stack levels required when called: 1
   167 ;; This function calls:
   168 ;;		_OSCILLATOR_Initialize
   169 ;;		_PIN_MANAGER_Initialize
   170 ;; This function is called by:
   171 ;;		_main
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text1
   176  007F96                     __ptext1:
   177                           	callstack 0
   178  007F96                     _SYSTEM_Initialize:
   179                           	callstack 29
   180  007F96                     
   181                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   182  007F96  ECE0  F03F         	call	_PIN_MANAGER_Initialize	;wreg free
   183                           
   184                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   185  007F9A  ECD7  F03F         	call	_OSCILLATOR_Initialize	;wreg free
   186  007F9E  0012               	return		;funcret
   187  007FA0                     __end_of_SYSTEM_Initialize:
   188                           	callstack 0
   189                           
   190 ;; *************** function _PIN_MANAGER_Initialize *****************
   191 ;; Defined at:
   192 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   193 ;; Parameters:    Size  Location     Type
   194 ;;		None
   195 ;; Auto vars:     Size  Location     Type
   196 ;;		None
   197 ;; Return value:  Size  Location     Type
   198 ;;                  1    wreg      void 
   199 ;; Registers used:
   200 ;;		wreg, status,2
   201 ;; Tracked objects:
   202 ;;		On entry : 0/0
   203 ;;		On exit  : 0/0
   204 ;;		Unchanged: 0/0
   205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   206 ;;      Params:         0       0       0       0       0       0       0       0       0
   207 ;;      Locals:         0       0       0       0       0       0       0       0       0
   208 ;;      Temps:          0       0       0       0       0       0       0       0       0
   209 ;;      Totals:         0       0       0       0       0       0       0       0       0
   210 ;;Total ram usage:        0 bytes
   211 ;; Hardware stack levels used: 1
   212 ;; This function calls:
   213 ;;		Nothing
   214 ;; This function is called by:
   215 ;;		_SYSTEM_Initialize
   216 ;; This function uses a non-reentrant model
   217 ;;
   218                           
   219                           	psect	text2
   220  007FC0                     __ptext2:
   221                           	callstack 0
   222  007FC0                     _PIN_MANAGER_Initialize:
   223                           	callstack 29
   224  007FC0                     
   225                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   226  007FC0  0E00               	movlw	0
   227  007FC2  6E8D               	movwf	141,c	;volatile
   228                           
   229                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   230  007FC4  0E00               	movlw	0
   231  007FC6  6E8C               	movwf	140,c	;volatile
   232                           
   233                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   234  007FC8  0E00               	movlw	0
   235  007FCA  6E89               	movwf	137,c	;volatile
   236                           
   237                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   238  007FCC  0E00               	movlw	0
   239  007FCE  6E8A               	movwf	138,c	;volatile
   240                           
   241                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   242  007FD0  0E00               	movlw	0
   243  007FD2  6E8B               	movwf	139,c	;volatile
   244                           
   245                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   246  007FD4  0E07               	movlw	7
   247  007FD6  6E96               	movwf	150,c	;volatile
   248  007FD8                     
   249                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
   250  007FD8  6892               	setf	146,c	;volatile
   251                           
   252                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0x00;
   253  007FDA  0E00               	movlw	0
   254  007FDC  6E93               	movwf	147,c	;volatile
   255                           
   256                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xC7;
   257  007FDE  0EC7               	movlw	199
   258  007FE0  6E94               	movwf	148,c	;volatile
   259  007FE2                     
   260                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
   261  007FE2  6895               	setf	149,c	;volatile
   262  007FE4                     
   263                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
   264  007FE4  010F               	movlb	15	; () banked
   265  007FE6  695E               	setf	94,b	;volatile
   266                           
   267                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC4;
   268  007FE8  0EC4               	movlw	196
   269  007FEA  6F5D               	movwf	93,b	;volatile
   270                           
   271                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
   272  007FEC  0E00               	movlw	0
   273  007FEE  6F5C               	movwf	92,b	;volatile
   274                           
   275                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
   276  007FF0  0E07               	movlw	7
   277  007FF2  6F5F               	movwf	95,b	;volatile
   278                           
   279                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
   280  007FF4  0E2F               	movlw	47
   281  007FF6  6F5B               	movwf	91,b	;volatile
   282                           
   283                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
   284  007FF8  0E00               	movlw	0
   285  007FFA  6E85               	movwf	133,c	;volatile
   286  007FFC                     
   287                           ; BSR set to: 15
   288                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
   289  007FFC  8EF1               	bsf	241,7,c	;volatile
   290  007FFE                     
   291                           ; BSR set to: 15
   292  007FFE  0012               	return		;funcret
   293  008000                     __end_of_PIN_MANAGER_Initialize:
   294                           	callstack 0
   295                           
   296 ;; *************** function _OSCILLATOR_Initialize *****************
   297 ;; Defined at:
   298 ;;		line 57 in file "mcc_generated_files/mcc.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   312 ;;      Params:         0       0       0       0       0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0       0       0       0       0
   314 ;;      Temps:          0       0       0       0       0       0       0       0       0
   315 ;;      Totals:         0       0       0       0       0       0       0       0       0
   316 ;;Total ram usage:        0 bytes
   317 ;; Hardware stack levels used: 1
   318 ;; This function calls:
   319 ;;		Nothing
   320 ;; This function is called by:
   321 ;;		_SYSTEM_Initialize
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           	psect	text3
   326  007FAE                     __ptext3:
   327                           	callstack 0
   328  007FAE                     _OSCILLATOR_Initialize:
   329                           	callstack 29
   330  007FAE                     
   331                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x32;
   332  007FAE  0E32               	movlw	50
   333  007FB0  6ED3               	movwf	211,c	;volatile
   334                           
   335                           ;mcc_generated_files/mcc.c: 62:     OSCCON2 = 0x00;
   336  007FB2  0E00               	movlw	0
   337  007FB4  6ED2               	movwf	210,c	;volatile
   338                           
   339                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
   340  007FB6  0E00               	movlw	0
   341  007FB8  6E9B               	movwf	155,c	;volatile
   342                           
   343                           ;mcc_generated_files/mcc.c: 66:     ACTCON = 0x00;
   344  007FBA  0E00               	movlw	0
   345  007FBC  6EB5               	movwf	181,c	;volatile
   346  007FBE  0012               	return		;funcret
   347  007FC0                     __end_of_OSCILLATOR_Initialize:
   348                           	callstack 0
   349  0000                     
   350                           	psect	rparam
   351  0000                     
   352                           	psect	idloc
   353                           
   354                           ;Config register IDLOC0 @ 0x200000
   355                           ;	unspecified, using default values
   356  200000                     	org	2097152
   357  200000  FF                 	db	255
   358                           
   359                           ;Config register IDLOC1 @ 0x200001
   360                           ;	unspecified, using default values
   361  200001                     	org	2097153
   362  200001  FF                 	db	255
   363                           
   364                           ;Config register IDLOC2 @ 0x200002
   365                           ;	unspecified, using default values
   366  200002                     	org	2097154
   367  200002  FF                 	db	255
   368                           
   369                           ;Config register IDLOC3 @ 0x200003
   370                           ;	unspecified, using default values
   371  200003                     	org	2097155
   372  200003  FF                 	db	255
   373                           
   374                           ;Config register IDLOC4 @ 0x200004
   375                           ;	unspecified, using default values
   376  200004                     	org	2097156
   377  200004  FF                 	db	255
   378                           
   379                           ;Config register IDLOC5 @ 0x200005
   380                           ;	unspecified, using default values
   381  200005                     	org	2097157
   382  200005  FF                 	db	255
   383                           
   384                           ;Config register IDLOC6 @ 0x200006
   385                           ;	unspecified, using default values
   386  200006                     	org	2097158
   387  200006  FF                 	db	255
   388                           
   389                           ;Config register IDLOC7 @ 0x200007
   390                           ;	unspecified, using default values
   391  200007                     	org	2097159
   392  200007  FF                 	db	255
   393                           
   394                           	psect	config
   395                           
   396                           ;Config register CONFIG1L @ 0x300000
   397                           ;	PLL Selection
   398                           ;	PLLSEL = PLL4X, 4x clock multiplier
   399                           ;	PLL Enable Configuration bit
   400                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   401                           ;	CPU System Clock Postscaler
   402                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   403                           ;	Low Speed USB mode with 48 MHz system clock
   404                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   405  300000                     	org	3145728
   406  300000  00                 	db	0
   407                           
   408                           ;Config register CONFIG1H @ 0x300001
   409                           ;	Oscillator Selection
   410                           ;	FOSC = INTOSCIO, Internal oscillator
   411                           ;	Primary Oscillator Shutdown
   412                           ;	PCLKEN = ON, Primary oscillator enabled
   413                           ;	Fail-Safe Clock Monitor
   414                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   415                           ;	Internal/External Oscillator Switchover
   416                           ;	IESO = OFF, Oscillator Switchover mode disabled
   417  300001                     	org	3145729
   418  300001  28                 	db	40
   419                           
   420                           ;Config register CONFIG2L @ 0x300002
   421                           ;	Power-up Timer Enable
   422                           ;	nPWRTEN = OFF, Power up timer disabled
   423                           ;	Brown-out Reset Enable
   424                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   425                           ;	Brown-out Reset Voltage
   426                           ;	BORV = 190, BOR set to 1.9V nominal
   427                           ;	Low-Power Brown-out Reset
   428                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   429  300002                     	org	3145730
   430  300002  5F                 	db	95
   431                           
   432                           ;Config register CONFIG2H @ 0x300003
   433                           ;	Watchdog Timer Enable bits
   434                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   435                           ;	Watchdog Timer Postscaler
   436                           ;	WDTPS = 32768, 1:32768
   437  300003                     	org	3145731
   438  300003  3C                 	db	60
   439                           
   440                           ; Padding undefined space
   441  300004                     	org	3145732
   442  300004  FF                 	db	255
   443                           
   444                           ;Config register CONFIG3H @ 0x300005
   445                           ;	CCP2 MUX bit
   446                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   447                           ;	PORTB A/D Enable bit
   448                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   449                           ;	Timer3 Clock Input MUX bit
   450                           ;	T3CMX = RC0, T3CKI function is on RC0
   451                           ;	SDO Output MUX bit
   452                           ;	SDOMX = RB3, SDO function is on RB3
   453                           ;	Master Clear Reset Pin Enable
   454                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   455  300005                     	org	3145733
   456  300005  D3                 	db	211
   457                           
   458                           ;Config register CONFIG4L @ 0x300006
   459                           ;	Stack Full/Underflow Reset
   460                           ;	STVREN = ON, Stack full/underflow will cause Reset
   461                           ;	Single-Supply ICSP Enable bit
   462                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   463                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   464                           ;	ICPRT = OFF, ICPORT disabled
   465                           ;	Extended Instruction Set Enable bit
   466                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   467                           ;	Background Debugger Enable bit
   468                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   469  300006                     	org	3145734
   470  300006  85                 	db	133
   471                           
   472                           ; Padding undefined space
   473  300007                     	org	3145735
   474  300007  FF                 	db	255
   475                           
   476                           ;Config register CONFIG5L @ 0x300008
   477                           ;	Block 0 Code Protect
   478                           ;	CP0 = OFF, Block 0 is not code-protected
   479                           ;	Block 1 Code Protect
   480                           ;	CP1 = OFF, Block 1 is not code-protected
   481                           ;	Block 2 Code Protect
   482                           ;	CP2 = OFF, Block 2 is not code-protected
   483                           ;	Block 3 Code Protect
   484                           ;	CP3 = OFF, Block 3 is not code-protected
   485  300008                     	org	3145736
   486  300008  0F                 	db	15
   487                           
   488                           ;Config register CONFIG5H @ 0x300009
   489                           ;	Boot Block Code Protect
   490                           ;	CPB = OFF, Boot block is not code-protected
   491                           ;	Data EEPROM Code Protect
   492                           ;	CPD = OFF, Data EEPROM is not code-protected
   493  300009                     	org	3145737
   494  300009  C0                 	db	192
   495                           
   496                           ;Config register CONFIG6L @ 0x30000A
   497                           ;	Block 0 Write Protect
   498                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   499                           ;	Block 1 Write Protect
   500                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   501                           ;	Block 2 Write Protect
   502                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   503                           ;	Block 3 Write Protect
   504                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   505  30000A                     	org	3145738
   506  30000A  0F                 	db	15
   507                           
   508                           ;Config register CONFIG6H @ 0x30000B
   509                           ;	Configuration Registers Write Protect
   510                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   511                           ;	Boot Block Write Protect
   512                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   513                           ;	Data EEPROM Write Protect
   514                           ;	WRTD = OFF, Data EEPROM is not write-protected
   515  30000B                     	org	3145739
   516  30000B  E0                 	db	224
   517                           
   518                           ;Config register CONFIG7L @ 0x30000C
   519                           ;	Block 0 Table Read Protect
   520                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   521                           ;	Block 1 Table Read Protect
   522                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   523                           ;	Block 2 Table Read Protect
   524                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   525                           ;	Block 3 Table Read Protect
   526                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   527  30000C                     	org	3145740
   528  30000C  0F                 	db	15
   529                           
   530                           ;Config register CONFIG7H @ 0x30000D
   531                           ;	Boot Block Table Read Protect
   532                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   533  30000D                     	org	3145741
   534  30000D  40                 	db	64
   535                           tosu	equ	0xFFF
   536                           tosh	equ	0xFFE
   537                           tosl	equ	0xFFD
   538                           stkptr	equ	0xFFC
   539                           pclatu	equ	0xFFB
   540                           pclath	equ	0xFFA
   541                           pcl	equ	0xFF9
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           prodh	equ	0xFF4
   547                           prodl	equ	0xFF3
   548                           indf0	equ	0xFEF
   549                           postinc0	equ	0xFEE
   550                           postdec0	equ	0xFED
   551                           preinc0	equ	0xFEC
   552                           plusw0	equ	0xFEB
   553                           fsr0h	equ	0xFEA
   554                           fsr0l	equ	0xFE9
   555                           wreg	equ	0xFE8
   556                           indf1	equ	0xFE7
   557                           postinc1	equ	0xFE6
   558                           postdec1	equ	0xFE5
   559                           preinc1	equ	0xFE4
   560                           plusw1	equ	0xFE3
   561                           fsr1h	equ	0xFE2
   562                           fsr1l	equ	0xFE1
   563                           bsr	equ	0xFE0
   564                           indf2	equ	0xFDF
   565                           postinc2	equ	0xFDE
   566                           postdec2	equ	0xFDD
   567                           preinc2	equ	0xFDC
   568                           plusw2	equ	0xFDB
   569                           fsr2h	equ	0xFDA
   570                           fsr2l	equ	0xFD9
   571                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhh        1C      0       0      22        0.0%
BITBIGSFRlhl        19      0       0      23        0.0%
BITBIGSFRllhhh       4      0       0      24        0.0%
BITBIGSFRllhhll      4      0       0      25        0.0%
BITBIGSFRlllhh       3      0       0      26        0.0%
BITBIGSFRlllhl      25      0       0      27        0.0%
BITBIGSFRllll        8      0       0      28        0.0%
ABS                  0      0       0      29        0.0%
BIGRAM             7FF      0       0      30        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Jul 23 00:42:48 2022

                            l15 7F9E                              l18 7FBE                              l69 7FFE  
                           l750 7FD8                             l752 7FE2                             l760 7F96  
                           l754 7FE4                             l762 7FA0                             l756 7FFC  
                           l748 7FC0                             l764 7FA4                             l758 7FAE  
                          _LATA 000F89                            _LATB 000F8A                            _LATC 000F8B  
                          _LATD 000F8C                            _LATE 000F8D                            _WPUB 000F85  
                          _main 7FA0                            start 0000                    ___param_bank 000000  
 __end_of_OSCILLATOR_Initialize 7FC0                           ?_main 0000                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                 __initialization 7F90                    __end_of_main 7FAE  
                        ??_main 0000                   __activetblptr 000000                          _ACTCON 000FB5  
                        _ANSELA 000F5B                          _ANSELB 000F5C                          _ANSELC 000F5D  
                        _ANSELD 000F5E                          _ANSELE 000F5F                          _OSCCON 000FD3  
                        isa$std 000001               _SYSTEM_Initialize 7F96                      __accesstop 0060  
       __end_of__initialization 7F90              ?_SYSTEM_Initialize 0000                   ___rparam_used 000001  
                __pcstackCOMRAM 0000             ??_SYSTEM_Initialize 0000       __end_of_SYSTEM_Initialize 7FA0  
                       _OSCCON2 000FD2                         _OSCTUNE 000F9B                         __Hparam 0000  
                       __Lparam 0000                         __pcinit 7F90                         __ramtop 0800  
                       __ptext0 7FA0                         __ptext1 7F96                         __ptext2 7FC0  
                       __ptext3 7FAE           _OSCILLATOR_Initialize 7FAE        ??_PIN_MANAGER_Initialize 0000  
          end_of_initialization 7F90          ?_OSCILLATOR_Initialize 0000             start_initialization 7F90  
        _PIN_MANAGER_Initialize 7FC0                     _INTCON2bits 000FF1                        __Hrparam 0000  
                      __Lrparam 0000         ??_OSCILLATOR_Initialize 0000                        isa$xinst 000000  
                    _INTCONbits 000FF2         ?_PIN_MANAGER_Initialize 0000  __end_of_PIN_MANAGER_Initialize 8000  
